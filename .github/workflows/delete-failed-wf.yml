name: Cleanup Failed Android Workflow Runs

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run mode (only show, don't delete)"
        type: boolean
        default: true
        required: false
      older_than_days:
        description: "Only delete runs older than X days"
        type: number
        default: 0
        required: false

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup parameters
        id: config
        run: |
          # Convert float to integer
          OLDER_THAN_INT=$(printf "%.0f" "${{ inputs.older_than_days }}")
          echo "DRY_RUN=${{ inputs.dry_run }}" >> $GITHUB_OUTPUT
          echo "OLDER_THAN_DAYS=$OLDER_THAN_INT" >> $GITHUB_OUTPUT
          echo "WORKFLOW_FILE=android.yml" >> $GITHUB_OUTPUT

      - name: Delete failed runs
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          DRY_RUN: ${{ steps.config.outputs.DRY_RUN }}
          OLDER_THAN: ${{ steps.config.outputs.OLDER_THAN_DAYS }}
          WORKFLOW_FILE: ${{ steps.config.outputs.WORKFLOW_FILE }}
        run: |
          # Calculate cutoff date
          CUTOFF=$(date -d "$OLDER_THAN days ago" +%Y-%m-%d)
          echo "üîç Scanning runs for: $WORKFLOW_FILE"
          echo "‚è≥ Older than: $CUTOFF ($OLDER_THAN days)"
          echo "üõ°Ô∏è Dry run: $DRY_RUN"

          # Get workflow ID
          WORKFLOW_ID=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows" \
            | jq -r --arg WF "$WORKFLOW_FILE" '.workflows[] | select(.path == ".github/workflows/"+$WF) | .id')

          # Get matching runs
          RUNS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs?status=failure")

          # Process runs
          echo "üìä Found $(echo "$RUNS" | jq '.total_count') failed runs"
          echo "$RUNS" | jq -r --arg CUTOFF "$CUTOFF" '
            .workflow_runs[] | 
            select(.created_at <= $CUTOFF) |
            "\(.id) | Run #\(.run_number) | \(.created_at) | \(.html_url)"
          ' | while read -r RUN_INFO; do
            RUN_ID=$(echo "$RUN_INFO" | awk '{print $1}')
            if [ "$DRY_RUN" = "true" ]; then
              echo "üö´ WOULD DELETE: $RUN_INFO"
            else
              echo "üóëÔ∏è DELETING: $RUN_INFO"
              curl -s -X DELETE -H "Authorization: Bearer $GH_TOKEN" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$RUN_ID"
            fi
          done